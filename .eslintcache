[{"C:\\Users\\Dima\\Desktop\\wild\\MeCademy\\MeCademy\\src\\index.js":"1","C:\\Users\\Dima\\Desktop\\wild\\MeCademy\\MeCademy\\src\\reportWebVitals.js":"2","C:\\Users\\Dima\\Desktop\\wild\\MeCademy\\MeCademy\\src\\App.js":"3","C:\\Users\\Dima\\Desktop\\wild\\MeCademy\\MeCademy\\src\\components\\Context\\MyContext.js":"4","C:\\Users\\Dima\\Desktop\\wild\\MeCademy\\MeCademy\\src\\components\\Home\\Home.js":"5","C:\\Users\\Dima\\Desktop\\wild\\MeCademy\\MeCademy\\src\\components\\About\\About.js":"6","C:\\Users\\Dima\\Desktop\\wild\\MeCademy\\MeCademy\\src\\components\\Couches\\Couches.js":"7","C:\\Users\\Dima\\Desktop\\wild\\MeCademy\\MeCademy\\src\\components\\Program\\Program.js":"8","C:\\Users\\Dima\\Desktop\\wild\\MeCademy\\MeCademy\\src\\components\\Registration\\Registration.js":"9","C:\\Users\\Dima\\Desktop\\wild\\MeCademy\\MeCademy\\src\\components\\Nav\\Navbar.jsx":"10","C:\\Users\\Dima\\Desktop\\wild\\MeCademy\\MeCademy\\src\\components\\MetaDecorator\\MetaDecorator.js":"11","C:\\Users\\Dima\\Desktop\\wild\\MeCademy\\MeCademy\\src\\components\\Nav\\Burger.jsx":"12","C:\\Users\\Dima\\Desktop\\wild\\MeCademy\\MeCademy\\src\\components\\Nav\\RightNav.js":"13"},{"size":730,"mtime":1611581890044,"results":"14","hashOfConfig":"15"},{"size":375,"mtime":1611044534349,"results":"16","hashOfConfig":"15"},{"size":1031,"mtime":1611586445733,"results":"17","hashOfConfig":"15"},{"size":400,"mtime":1611598330657,"results":"18","hashOfConfig":"15"},{"size":748,"mtime":1611833851767,"results":"19","hashOfConfig":"15"},{"size":357,"mtime":1611568973167,"results":"20","hashOfConfig":"15"},{"size":386,"mtime":1611788643658,"results":"21","hashOfConfig":"15"},{"size":380,"mtime":1611586226765,"results":"22","hashOfConfig":"15"},{"size":368,"mtime":1611833851772,"results":"23","hashOfConfig":"15"},{"size":1023,"mtime":1611605640677,"results":"24","hashOfConfig":"15"},{"size":299,"mtime":1611568342256,"results":"25","hashOfConfig":"15"},{"size":1596,"mtime":1611606053347,"results":"26","hashOfConfig":"15"},{"size":3899,"mtime":1611780954320,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1rokyra",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\Dima\\Desktop\\wild\\MeCademy\\MeCademy\\src\\index.js",[],["58","59"],"C:\\Users\\Dima\\Desktop\\wild\\MeCademy\\MeCademy\\src\\reportWebVitals.js",[],"C:\\Users\\Dima\\Desktop\\wild\\MeCademy\\MeCademy\\src\\App.js",[],"C:\\Users\\Dima\\Desktop\\wild\\MeCademy\\MeCademy\\src\\components\\Context\\MyContext.js",[],"C:\\Users\\Dima\\Desktop\\wild\\MeCademy\\MeCademy\\src\\components\\Home\\Home.js",[],"C:\\Users\\Dima\\Desktop\\wild\\MeCademy\\MeCademy\\src\\components\\About\\About.js",[],"C:\\Users\\Dima\\Desktop\\wild\\MeCademy\\MeCademy\\src\\components\\Couches\\Couches.js",[],"C:\\Users\\Dima\\Desktop\\wild\\MeCademy\\MeCademy\\src\\components\\Program\\Program.js",[],"C:\\Users\\Dima\\Desktop\\wild\\MeCademy\\MeCademy\\src\\components\\Registration\\Registration.js",["60"],"import React from 'react'\r\nimport MetaDecorator from '../MetaDecorator/MetaDecorator';\r\nimport TypeformRight from '../reg_form/reg_form';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Reg_div_onPage = styled.div`\r\n height: 400px;\r\n  width: 80%;\r\n  margin: auto;\r\n  margin-top: 50px;\r\n  display: block;\r\n  position: relative;\r\n`;\r\n\r\n\r\nconst Registration = () => {\r\n    return (\r\n        <div>\r\n            <MetaDecorator\r\n             description='Registration'\r\n             title='Register Here'\r\n             />\r\n            <p>Hola! Register here</p>\r\n\r\n            <Reg_div_onPage>\r\n            <TypeformRight  />\r\n            </Reg_div_onPage>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Registration\r\n","C:\\Users\\Dima\\Desktop\\wild\\MeCademy\\MeCademy\\src\\components\\Nav\\Navbar.jsx",["61"],"import React, {useContext} from 'react';\r\nimport styled from 'styled-components';\r\nimport Burger from './Burger';\r\nimport {MyContext} from '../Context/MyContext';\r\n\r\nconst Nav = styled.nav`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 55px;\r\n  padding: 0 100px 0 10px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  z-index: 20;\r\n  transition: background 0.5s ease;\r\n  background-color: ${(props)=> props.isHover && 'white'};\r\n  background-color: ${(props) => props.open  &&  'white'} ; \r\n\r\n  .logo {\r\n    padding: 15px 0;\r\n  }\r\n\r\n`\r\n\r\nconst Navbar = () => {\r\n  const {open, setOpen} = useContext(MyContext);\r\n  const context = useContext(MyContext);\r\n  \r\n\r\n  const handleMouseOver= ()=>{\r\n    context.setHover(!context.hover)\r\n  }\r\n\r\n  return (\r\n    \r\n    <Nav open={open} isHover={context.hover} className='navbar' onMouseOver={()=>handleMouseOver()} onMouseOut={()=>handleMouseOver()}>\r\n      <div className=\"logo\">\r\n      </div>\r\n      <Burger />\r\n    </Nav>\r\n    \r\n    \r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","C:\\Users\\Dima\\Desktop\\wild\\MeCademy\\MeCademy\\src\\components\\MetaDecorator\\MetaDecorator.js",[],"C:\\Users\\Dima\\Desktop\\wild\\MeCademy\\MeCademy\\src\\components\\Nav\\Burger.jsx",["62"],"import React, { useState, useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport RightNav from './RightNav';\r\nimport {MyContext} from '../Context/MyContext';\r\n\r\n\r\nconst StyledBurger = styled.div`\r\n  cursor: pointer;\r\n  width: 2rem;\r\n  height: 2rem;\r\n  position: fixed;\r\n  top: 15px;\r\n  right: 20px;\r\n  z-index: 20;\r\n  display: none;\r\n\r\n  @media (max-width: 1000px) {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    flex-flow: column nowrap;\r\n  }\r\n\r\n  div {\r\n    width: 2rem;\r\n    height: 0.25rem;\r\n    background-color: ${({ open }) => open  ? '#ccc' : '#333'};      \r\n    \r\n    transform-origin: 1px;\r\n    transition: all 0.3s linear;\r\n\r\n    &:nth-child(1) {\r\n      transform: ${({ open }) => open ? 'rotate(45deg)' : 'rotate(0)'};\r\n    }\r\n\r\n    &:nth-child(2) {\r\n      transform: ${({ open }) => open ? 'translateX(100%)' : 'translateX(0)'};\r\n      opacity: ${({ open }) => open ? 0 : 1};\r\n    }\r\n\r\n    &:nth-child(3) {\r\n      transform: ${({ open }) => open ? 'rotate(-45deg)' : 'rotate(0)'};\r\n    }\r\n\r\n    @media (max-width: 1000px) {\r\n    background-color: ${(props)=> props.isHover ? 'black' : 'white'};\r\n    background-color: ${(props) => props.open  &&  'black'} ; \r\n  }\r\n  }\r\n`;\r\n\r\nconst Burger = () => {\r\n  const {open, setOpen} = useContext(MyContext);\r\n  const context = useContext(MyContext);\r\n  return (\r\n    <>\r\n      <StyledBurger isHover={context.hover} open={open} onClick={() => setOpen(!open)}>\r\n        <div />\r\n        <div />\r\n        <div />\r\n      </StyledBurger>\r\n      <RightNav open={open}/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Burger;","C:\\Users\\Dima\\Desktop\\wild\\MeCademy\\MeCademy\\src\\components\\Nav\\RightNav.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":26,"column":13,"nodeType":"69","endLine":26,"endColumn":29},{"ruleId":"70","severity":1,"message":"71","line":25,"column":16,"nodeType":"72","messageId":"73","endLine":25,"endColumn":23},{"ruleId":"70","severity":1,"message":"74","line":1,"column":17,"nodeType":"72","messageId":"73","endLine":1,"endColumn":25},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"react/jsx-pascal-case","Imported JSX component Reg_div_onPage must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","no-unused-vars","'setOpen' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]